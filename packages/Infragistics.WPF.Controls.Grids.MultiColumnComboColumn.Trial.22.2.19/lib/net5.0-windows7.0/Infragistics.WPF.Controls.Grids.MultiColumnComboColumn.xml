<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Infragistics.WPF.Controls.Grids.MultiColumnComboColumn</name>
    </assembly>
    <members>
        <member name="T:Infragistics.Controls.Grids.MultiColumnComboColumn">
            <summary>
            A <see cref="T:Infragistics.Controls.Grids.Column"/> that generates a <see cref="T:Infragistics.Controls.Editors.XamMultiColumnComboEditor"/> as the content for a <see cref="T:Infragistics.Controls.Grids.Cell"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.MultiColumnComboColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Grids.MultiColumnComboColumn"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.MultiColumnComboColumn.GenerateContentProvider">
            <summary>
            Generates a new <see cref="T:Infragistics.Controls.Grids.Primitives.MultiColumnComboColumnContentProvider"/> that will be used to generate content for <see cref="T:Infragistics.Controls.Grids.Cell"/> objects for this <see cref="T:Infragistics.Controls.Grids.Column"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Grids.MultiColumnComboColumn.RequiresFullRedrawOnEditorStyleUpdate">
            <summary>
            Gets / sets if whether the <see cref="M:Infragistics.Controls.Grids.XamGrid.ResetPanelRows(System.Boolean)"/> should be called to do a full redraw when the <see cref="T:Infragistics.Controls.Grids.MultiColumnComboColumn"/>.EditorStyle is changed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.MultiColumnComboColumn.AllowCellEditorValueChangedFiltering">
            <summary>
            Gets a value indicating whether filtering will be immediately applied after the value of the cell editor is changed.
            </summary>
            <value>
            	<c>true</c> if a filter should be applied immediately after the value of the cell editor is changed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Infragistics.Controls.Grids.MultiColumnComboColumn.ItemsSourceProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.MultiColumnComboColumn.ItemsSource"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.MultiColumnComboColumn.ItemsSource">
            <summary>
            This is the items to display for the combo box contents of each cell. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.MultiColumnComboColumn.DisplayMemberPathProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.MultiColumnComboColumn.DisplayMemberPath"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.MultiColumnComboColumn.DisplayMemberPath">
            <summary>
            This is the key from the ItemSource that will be used as a display value for the combo box.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.MultiColumnComboColumn.AutoGenerateColumnsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.MultiColumnComboColumn.AutoGenerateColumns"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.MultiColumnComboColumn.AutoGenerateColumns">
            <summary>
            If true will cause the Combo Box to auto-generate the columns based on the ItemSource Property.  Otherwise, will use the columns in the Columns Property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Grids.MultiColumnComboColumn.SelectedValuePathProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Grids.MultiColumnComboColumn.SelectedValuePath"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.MultiColumnComboColumn.SelectedValuePath">
            <summary>
            This is the key from the ItemSource that will be used as a value value for the selected item of the combo box.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Grids.MultiColumnComboColumn.Columns">
            <summary>
            Allows the user the ability to specify which columns they want to display in the combo box, these are ignored if <see cref="P:Infragistics.Controls.Grids.MultiColumnComboColumn.AutoGenerateColumns"/> dependency property is set to true.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Grids.Primitives.MultiColumnComboColumnContentProvider">
            <summary>
            An object that provides content to <see cref="T:Infragistics.Controls.Grids.Cell"/> objects that belong to a <see cref="T:Infragistics.Controls.Grids.MultiColumnComboColumn"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.MultiColumnComboColumnContentProvider.#ctor">
            <summary>
            Instantiates a new instance of the <see cref="T:Infragistics.Controls.Grids.Primitives.MultiColumnComboColumnContentProvider"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.MultiColumnComboColumnContentProvider.ResolveDisplayElement(Infragistics.Controls.Grids.Cell,System.Windows.Data.Binding)">
            <summary>
            Sets up the element that will be displayed in a <see cref="T:Infragistics.Controls.Grids.Cell"/>, when the cell is not in edit mode.
            </summary>
            <param name="cell"></param>
            <param name="cellBinding"></param>
            <returns>
            The element that should be displayed.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.MultiColumnComboColumnContentProvider.ResolveValueFromEditor(Infragistics.Controls.Grids.Cell)">
            <summary>
            Resolves the value of the editor control, so that the cell's underlying data can be updated.
            </summary>
            <param name="cell"></param>
            <returns>
            The value that should be displayed in the cell.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.MultiColumnComboColumnContentProvider.ResolveEditorControl(Infragistics.Controls.Grids.Cell,System.Object,System.Double,System.Double,System.Windows.Data.Binding)">
            <summary>
            Sets up the edtior control that will be displayed in a <see cref="T:Infragistics.Controls.Grids.Cell"/> when the the cell is in edit mode.
            </summary>
            <param name="cell"></param>
            <param name="editorValue"></param>
            <param name="availableWidth"></param>
            <param name="availableHeight"></param>
            <param name="editorBinding"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Grids.Primitives.MultiColumnComboColumnContentProvider.EditorRemoved">
            <summary>
            Raised when the editor is removed from the cell.
            </summary>
        </member>
    </members>
</doc>
